/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'

// Create Virtual Routes

const MenuLazyImport = createFileRoute('/menu')()
const IndexLazyImport = createFileRoute('/')()
const OrdersIndexLazyImport = createFileRoute('/orders/')()
const OrdersOrderIdLazyImport = createFileRoute('/orders/$orderId')()

// Create/Update Routes

const MenuLazyRoute = MenuLazyImport.update({
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/menu.lazy').then((d) => d.Route))

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const OrdersIndexLazyRoute = OrdersIndexLazyImport.update({
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/orders/index.lazy').then((d) => d.Route))

const OrdersOrderIdLazyRoute = OrdersOrderIdLazyImport.update({
  path: '/orders/$orderId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/orders/$orderId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuLazyImport
      parentRoute: typeof rootRoute
    }
    '/orders/$orderId': {
      id: '/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof OrdersOrderIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/menu': typeof MenuLazyRoute
  '/orders/$orderId': typeof OrdersOrderIdLazyRoute
  '/orders': typeof OrdersIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/menu': typeof MenuLazyRoute
  '/orders/$orderId': typeof OrdersOrderIdLazyRoute
  '/orders': typeof OrdersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/menu': typeof MenuLazyRoute
  '/orders/$orderId': typeof OrdersOrderIdLazyRoute
  '/orders/': typeof OrdersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/menu'
    | '/orders/$orderId'
    | '/orders'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/signin' | '/signup' | '/menu' | '/orders/$orderId' | '/orders'
  id:
    | '__root__'
    | '/'
    | '/signin'
    | '/signup'
    | '/menu'
    | '/orders/$orderId'
    | '/orders/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  MenuLazyRoute: typeof MenuLazyRoute
  OrdersOrderIdLazyRoute: typeof OrdersOrderIdLazyRoute
  OrdersIndexLazyRoute: typeof OrdersIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  MenuLazyRoute: MenuLazyRoute,
  OrdersOrderIdLazyRoute: OrdersOrderIdLazyRoute,
  OrdersIndexLazyRoute: OrdersIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/signin",
        "/signup",
        "/menu",
        "/orders/$orderId",
        "/orders/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/menu": {
      "filePath": "menu.lazy.tsx"
    },
    "/orders/$orderId": {
      "filePath": "orders/$orderId.lazy.tsx"
    },
    "/orders/": {
      "filePath": "orders/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
